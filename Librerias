import pandas as pd
import numpy as np
import tensorflow as tf
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense, Conv2D, Flatten, Dropout, MaxPooling2D
from tensorflow.keras import optimizers, backend, callbacks
import tensorflow.keras.utils as np_utils
from tensorflow.keras.utils import to_categorical
from sklearn.model_selection import train_test_split
import matplotlib.pyplot as plt

np.random.seed(100)

from google.colab import drive
drive.mount('/content/drive')

# Lectura del archivo de imágenes
dataset = pd.read_csv('/content/drive/MyDrive/SenasDataset.csv', header= None)

# Tamaño de los datos
dataset.shape

# Cambio del tipo de dato del data set a arreglo de numpy
dataset = dataset.values

# Separar imágenes y etiquetas
imagenes = dataset[:, :-1]
clases = dataset[:, -1] #clases = dataset[:, 1600]

# Verificar las clases antes de codificarlas
print(np.unique(clases))

# Transformar imágenes a su formato original
imagenes = imagenes.reshape(12000, 40, 40, 1)

# Normalizar las imágenes
imagenes = imagenes/255

# Codificación one-hot de las clases
etiquetas = to_categorical(clases, num_classes=24)

# Mostrar la codificación one-hot
print(clases[0], '->', etiquetas[0])

# Visualización
plt.imshow(imagenes[0].reshape(40, 40), cmap='gray')
plt.title(f'Clase: {clases[0]}')
plt.show()
